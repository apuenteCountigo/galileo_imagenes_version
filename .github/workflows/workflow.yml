name: Deploy
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  rename-file:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Read content from file
        id: read-file
        run: |
          FILENAME=$(cat images_name/servicio-apis.txt)
          echo "filename=$FILENAME" >> $GITHUB_ENV

      - name: Get list of modified files
        id: modified-files
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: { files } } = await github.rest.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: context.sha
            });
            const fileNames = files.map(f => f.filename).join(' ');
            core.setOutput('files', fileNames);
      - name: executing remote ssh commands using ssh key
        if: env.start_deploy == 'true'
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            ssh -i ~/id_rsaalain mome@192.168.0.98 '
            FILE_CONTENTS="" &&
            for file in ${{ steps.modified-files.outputs.files }}; do
              echo "Fue modificado $file"
              if [[ ! "$file" =~ "workflow.yml" ]]; then
                  echo "Renombrando $file via SSH"
                  modified_file=$(echo "$file" | sed 's|images_name/||g' | sed 's|.txt||g')
                  CONTENT=$(cat "$file")
                  FILE_CONTENTS=$(printf "%s_%s" "$modified_file" "$CONTENT")
                  echo "Nombre completo:: $FILE_CONTENTS"
                  sudo docker images | grep galileo-newdev-"$modified_file"
                  echo "GREPPPPP"
              fi
            done'
            exit
      - name: Print the filename for debugging
        run: echo "The filename is ${{ env.filename }}"
